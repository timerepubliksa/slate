---
title: Timerepublik API Reference

language_tabs:
  - Example

toc_footers:
  - <a href="mailto:info@timerepublik.com">Request Us a developer api key</a> 
  - <a href='https://github.com/tripit/slate'>Documentation Powered by Slate</a>

includes:
  - errors

search: true
---

# TimeRepublik Rest API's

Abbiamo rilasciato la prima versione delle Api TimeRepublik per permettere una maggiore integrazione dei servizi offerti da TRK con le vostre APP.

La API REST qui descritta permette un accesso in lettura e scrittura a tutte le funzionalità della piattaforma Time Republik.

Gli utenti sono identificati tramite protocollo Oauth2; Il formato delle risposte è JSON.  

# Oauth Authentication

## Introduzione

Il server Oauth Timerepublik è configurato per autenticarsi tramite 

- Authorization Code Grant (3-legged)
- Resource Owner Password Credentials Grant

Capire il funzionamento di oauth è essenziale per la creazione di applicazioni che utilizzino le API TRK. 

Per autorizzare uno specifico utente ad accedere alle api dovete: 

- Richiedere (se non lo avete già fatto) a Timerepublik una coppia di chiavi client_id e client_secret specifici per la vostra applicazione.
- Richiedere un access_token che vi permetterà di accedere alle api nel ruolo di un utente, utilizzando il protocollo Oauth2.
- Includere l'access_token in tutte le richieste HTTP verso le API; includendo nell'header delle richieste {"Authorization: Bearer YOUR_ACCESS_TOKEN"}


I paragrafi seguenti illustrano il funzionamento base di OAuth.

## Authorization Code Flow
Utile per integrare Timerepublik con un qualsiasi servizio WEB. 
E' probabilmnete il metodo di autorizzazione piu' utilizzato. 

Consiste nello scambio di un codice di autorizzazione per un access_token, per i dettagli si consiglia di consultare l'rfc OAUTH https://tools.ietf.org/html/rfc6749#section-4.1

Come anticipato, il primo passo è quello di richiedere al team di sviluppo di TimeRepublik una coppia di chiavi che rappresentano la vostra app (client_id e client_secret), indicando inoltre l'url di callback per permettere agli utenti della vostra app di continuare l'accesso dopo l'autorizzazione.

### Richiesta di autorizzazione

Per ottenere il token di autorizzazione dovete eseguire un redirect o far seguire un link  dalla vostra applicazione verso l'endpoint 

> Richiesta di autenticazione Oauth

```shell
open https://timerepublik.com/oauth/authorize?client_id=YOUR_CLIENT_ID&redirect_uri=YOUR_REDIRECT_URI&response_type=code
```


GET: `https://timerepublik.com/oauth/authorize?client_id=YOUR_CLIENT_ID&redirect_uri=YOUR_REDIRECT_URI&response_type=code`


sostituendo con i parametri corretti YOUR_CLIENT_ID e YOUR_REDIRECT_URI.

All'utente verrà chiesto di autenticarsi in TimeRepublik inserendo le proprie credenziali. 

Alla fine della procedura di autenticazione Timerepublik redirigerà l'utente nuovamente alla vostra app, all'indirizzo YOUR_REDIRECT_URI che avete passato in parametro.

Tra i parametri della richiesta che Timerepublik farà al vostro servizio troverete il vostro authorization_code. 

Ora non resta che scambiarlo per un access_token.

### Richiedere l'access token

L'authorization_code puo' essere scambiato con un access token tramite una chiamata POST server<->server all'endpoint

> Esempio di richiesta access_token

```shell
curl --data 'client_id=YOUR_CLIENT_ID&client_secret=YOUR_CLIENT_SECRET&grant_type=authorization_code&redirect_uri=YOUR_REDIRECT_URI&code=RETURNED_AUTHORIZATION_CODE' \
'https://timerepublik.com/oauth/token'
```

> Risposta in caso di successo

```json
{
  "access_token":"fa591d5b92be3ba7bc5c2c10be938901aa2c5c932cf9f312e5e2660d235dbe46",
  "token_type":"bearer",
  "expires_in":604800,
  "scope":"public",
  "created_at":1431526714
}
```

> Risposta in caso di fallimento (http status 401)

```json
{
  "error":"invalid_grant",
  "error_description":"The provided authorization grant is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client."
}
```


`https://timerepublik.com/oauth/token`

dovete includere i seguenti parametri :

Parametri | Descrizione
--------- | -----------
client_id | Il vostro CLIENT_ID 
client_secret | Il vostro CLIENT_SECRET
code | l'authorization code ritornato dalla procedura precedente
grant_type | Impostare a 'authorization_code'
redirect_uri | Il parametro YOUR_REDIRECT_URI utilizzato in precedenza

In risposta otterrete qualcosa di simile a 

`json
{
  "access_token": "fa591d5b92be3ba7bc5c2c10be938901aa2c5c932cf9f312e5e2660d235dbe46",
  "token_type": "bearer",
  "expires_in": 604800,
  "scope": "public",
  "created_at": 1431526714
}
`

Risposta | Descrizione
--------- | -----------
access_token | L'access token generato per l'utente che si è autenticato.
expires_in | Il tempo di validità del token in secondi a partire da created_at
created_at | L'effettiva data di creazione del token


## Resource Owner Password Credentials Grant

Quando non è possibile utilizzare "Authorization code flow" è possibile richiedere direttamente un access_token passando le credenziali dell'utente. 

Timerepublik consente anche l'accesso tramite single sign on di facebook e twitter, è prevista una variante del Password Credentials Grant che consente l'accesso utilizzando le credenziali Facebook/Teitter. 

> Resource Owner Password Credentials Grant


```shell
curl --data 'client_id=YOUR_CLIENT_ID&grant_type=password&username=USER_EMAIL&password=USER_PASSWORD' https://timerepublik.com/oauth/token
```

> assicurati di impostare `YOUR_CLIENT_ID` `USER_EMAIL` e `USER_PASSWORD` con i parametri corretti.

> In risposta il server ritornerà l'access_token da utilizzare nelle chiamate successive.

```json
{
  "access_token": "ffeb8b661600ee464eb82592dd143810638da818a5cdb292f2c0e493141ae963",
  "token_type": "bearer",
  "expires_in": 604800,
  "scope": "public",
  "created_at": 1431100101
}
```

> risposta 401 in caso di errore (client_id non autorizzato o login errato)

```json
{
  "error": "invalid_grant",
  "error_description": "The provided authorization grant is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client."
}
```


L'endpoint da chiamare per ottenere l'access_token è :

`POST: https://timerepublik.com/oauth/token`

i parametri da utilizzare sono 

Parametri | Descrizione
--------- | -----------
grant_type | impostare a 'password'
username | email dell'utente
password | la password dell'utente

<aside class="notice">
NOTE: Pasword Credential Grant non neccessita di client_id e client_secret
</aside>

In risposta otterrete qualcosa di simile a 

`json
{"access_token":"fa591d5b92be3ba7bc5c2c10be938901aa2c5c932cf9f312e5e2660d235dbe46","token_type":"bearer","expires_in":604800,"scope":"public","created_at":1431526714}
`

Risposta | Descrizione
--------- | -----------
access_token | L'access token generato per l'utente che si è autenticato.
expires_in | Il tempo di validità del token in secondi a partire da created_at
created_at | L'effettiva data di creazione del token


### Password credential grant Facebook/Twitter

E' possibile scambiare un access_token ottenuto da Facebook/Twitter per l'app TimeRepublik con un access_token 
TimeRepublik.

> Password Credential grant per facebook

```shell
curl --data 'grant_type=password&username=1123961800&trusted_token=CACoHZC3D1e4BAMJ2QhR8XZBe44glLLTBN7KuZBFH4I2ZB3w60tJWjoLgp3ZAasXNVkQzZABI158GaBcGsTx5cvx1ZA5a0yiwUZCKK78ZAZAj05wSenwgHkrvpbgUZCYs8vNfvpPfgcO64sb7QZBDNIrUJEx5f4q6ec3mvNQa6SsQ4ZAp6s1vlowMgiUM7ZBJUmir1ZAVYZD&provider=facebook' 'https://timerepublik.com/oauth/token'
```

> Password credential grant per Twitter

```shell
curl --data 'grant_type=password&username=35727806&trusted_token=35707806-Ke9GVcSHIXoXGSQhQEgMUMIl7Y2bsGrCawdO2vSd0&trusted_secret=lY4mOe2omuYSDh3kUOa1agpdzpLtCXqJvrpwAKjYEcA4f&provider=twitter' 'https://timerepublik.com/oauth/token'
```

Endpoint: 

`POST: https://timerepublik.com/oauth/token`

i parametri da utilizzare sono 

Parametri | Descrizione
--------- | -----------
grant_type | impostare a 'password'
username | L'object ID Facebook/Twitter corrispondente all'utente
trusted_token | access_token ottenuto da Facebook/twitter
trusted_secret | impostare con l'access_secret (solo per twitter)
provider | impostare a 'facebook' o 'twitter' a seconda della provenienza del token

Timerepublik verificherà la validità del Token di autenticazione e genererà a sua volta un access_token per l'utente 
che deve essersi registrato almento una volta utilizzando il proprio profilo social a TimeRepublik.

 

# Registrazione nuovo utente

## Registrare un utente tramite API

```shell
curl --data "user[email]=example@email.com&user[password]=asdasd&user[password_confirmation]=asdasd&user[im_sixteen]=true&user[terms_of_service]=true&user[locale]=it" https://timerepublik.com/api/v1/registrations
```

> In caso di successo http status 200

```json
{
  "id": 1012,
  "email": "azaup.a@gmail.com",
  "username": null,
  "first_name": null,
  "last_name": null,
  "avatar": null,
  "bio": null,
  "gender": null,
  "time_available": 0,
  "time_earned": 0,
  "time_spent": 0,
  "trustmeter": 0,
  "avg_rating": null,
  "units": "km",
  "time_zone": null,
  "locale": "it",
  "public_profile": true,
  "location": {
    "latitude": null,
    "longitude": null
  },
  "distance": null,
  "tag_ids": [],
  "talent_ids": [],
  "created_at": "2015-05-14T12:13:40.088Z",
  "updated_at": "2015-05-14T12:13:40.088Z",
  "role": null,
  "email_privacy": 0,
  "cover": null,
  "gender_privacy": 2,
  "birthday": null,
  "birthday_privacy": 2,
  "phone": null,
  "phone_privacy": 0,
  "address": null,
  "address_privacy": 0,
  "city": null,
  "city_privacy": 2,
  "state": null,
  "state_privacy": 2,
  "country": null,
  "country_privacy": 2,
  "zip": null,
  "zip_privacy": 2,
  "skype": null,
  "facebook": null,
  "twitter": null,
  "linkedin": null,
  "website": null,
  "vkontakte": null,
  "odnoklasniki": null,
  "tags_count": 0,
  "requests_count": 0,
  "offers_count": 0,
  "deals_count": 0,
  "awards_count": 0,
  "referer_count": 0,
  "favoritings_count": 0,
  "inverse_favoritings_count": 0,
  "new_awards": 0,
  "delta": true,
  "group": null,
  "latitude": null,
  "longitude": null,
  "tags": [],
  "talents": [],
  "favorites": [],
  "awards": [],
  "timetrackers": [],
  "registration_completed_at": null,
  "attachments": [],
  "notification_new_message": true,
  "notification_new_bulletin_post": true,
  "notification_new_favorite": true,
  "notification_award_gained": true,
  "notification_notify_new_friend_user": true,
  "notification_notify_new_bulletin_post": true,
  "notification_notify_request_expiration": true,
  "notification_notify_deal_payment": true,
  "notification_notify_inactivity_user": true,
  "notification_instant_pay": true
}
```

> in caso di errore http status 422 Unprocessable Entity

```json
{
  "errors": {
    "email": [
      "Email \u00e8 gi\u00e0 in uso"
    ],
    "im_sixteen": [
      "Per registrarti a TIMEREPUBLIK, devi aver compiuto i 16 anni di et\u00e0"
    ]
  },
  "error_code": 2001,
  "error_message": "Validation Error"
}
```

> Per avere i messaggi di errore in una lingua diversa passare un parametro aggiuntivo locale=CODICE_LOCALE

L'endpoint permette la registrazione di un nuovo utente direttamente tramite API

### HTTP Request

`POST https://timerepublik.com/api/v1/registrations`


### Parametri Obbligatori

`
{
user:{
  email: "",
  password: "",
  password_confirmation: "",
  im_sixteen: true,
  terms_of_service: true,
  locale: "it"
  }
}
`


### Parametri

Parameter | Type | Description
--------- | ------- | -----------
user[email] | string | Indirizzo Email dell'utente. Deve essere univoco in Timerepublik
user[password] | string | Password, almeno 6 caratteri
user[password_confirmation] | string | Ripetere la password
user[im_sixteen] | boolean | true se l'utente ha già compiuto 16 anni
user[terms_of_service] | boolean | confermare che l'utente ha preso visione dei termini di servizio
user[locale] | string | Codice identificativo della lingua preferita dell'utente. 
user[referer] | string | (opzionale) indicare il codice referer

<aside class="success">
Per il solo endpoint di registrazione non è richiesto un access_token.
</aside>

### Parametri opzionali per registrazione con Facebook/Twitter Token

Per permettere la registrazione anche da App con Facebook/Twitter, questa deve essere implementata lato app e 
devono essere passati a timerepublik i parametri di accesso validi in fase di registrazione. 

> Registrazione con Twitter/Facebook 

```shell
curl --data "user[email]=email@gmail.com&user[password]=asdasd&user[password_confirmation]=asdasd&user[im_sixteen]=true&user[terms_of_service]=true&user[locale]=it&user[auth_provider][trusted_token]=25707806-Ke9GVcSHIXoXGSQhQEgMUMIl7Y2bsGrCawdO2vSd0&user[auth_provider][trusted_secret]=aY4mOejomuYSDh3kUOa1agpdzpLtCXqJvrpwAKjYEcA4f&user[auth_provider][uid]=35727806&user[auth_provider][provider]=twitter" https://timerepublik.com/api/v1/registrations
```

Parameter | Type | Description
--------- | ------- | -----------
user[auth_provider][trusted_token] | string | access_token valido per Facebook/Twitter
user[auth_provider][trusted_secret] | string | solo per twitter, access_secret
user[auth_provider][uid] | string | l'uid dell'utente su social network
user[auth_provider][provider] | string | facebook o twitter

Nel caso questi parametri siano presenti verrà validato l'access_token del social network e gli accessi memorizzati assieme all'utente per permettere l'autenticazione con singol sign on Facebook/Twitter.

# Profilo Utente /me

Grazie a questo endpoint è possibile ottenere ed aggiornare le informazioni legate al profilo utente 


## Dettagli profilo utente


```shell
curl "https://timerepublik.com/api/v1/me.json"
  -H "Authorization: Bearer 4256dde1cce5957d2d6be4b4f4dcee1656ec2990522eab52a8491e2130f29ea7"
```

> The above command returns JSON structured like this:

```json
{
  "id": 1,
  "email": "enrico@megiston.it",
  "username": "pioz",
  "first_name": "Enrico",
  "last_name": "Pilotto",
  "avatar": null,
  "bio": null,
  "gender": null,
  "time_available": 0,
  "time_earned": 0,
  "time_spent": 0,
  "trustmeter": 0,
  "avg_rating": null,
  "units": "km",
  "time_zone": null,
  "locale": "it",
  "public_profile": true,
  "location": {
    "latitude": -87.53277059192833,
    "longitude": -127.91044935296776
  },
  "distance": null,
  "tag_ids": [
    842691406
  ],
  "talent_ids": [
    11
  ],
  "created_at": "2015-05-14T15:07:24.000Z",
  "updated_at": "2015-05-14T15:07:24.000Z",
  "email_privacy": 0,
  "cover": null,
  "gender_privacy": 2,
  "birthday": null,
  "birthday_privacy": 2,
  "phone": null,
  "phone_privacy": 0,
  "address": "1431 Schmidt Unions",
  "address_privacy": 0,
  "city": "Octaviafurt",
  "city_privacy": 2,
  "state": "Wisconsin",
  "state_privacy": 2,
  "country": "Malta",
  "country_privacy": 2,
  "zip": "90743",
  "zip_privacy": 2,
  "skype": null,
  "facebook": null,
  "twitter": null,
  "linkedin": null,
  "website": null,
  "vkontakte": null,
  "odnoklasniki": null,
  "tags_count": 0,
  "requests_count": 0,
  "offers_count": 0,
  "deals_count": 0,
  "awards_count": 0,
  "referer_count": 0,
  "favoritings_count": 0,
  "inverse_favoritings_count": 0,
  "new_awards": 0,
  "delta": true,
  "group": null,
  "latitude": -87.53277059192833,
  "longitude": -127.91044935296776,
  "tags": [
    {
      "id": 842691406,
      "list": [],
      "active": true,
      "position": 0.0,
      "talent_id": 11
    }
  ],
  "talents": [
    {
      "id": 11,
      "name": "Mason",
      "position": 0.0,
      "slug": null,
      "icon": null,
      "tags_count": 0,
      "talent_category_id": 6,
      "created_at": "2015-05-14T15:07:24.000Z",
      "updated_at": "2015-05-14T15:07:24.000Z"
    }
  ],
  "favorites": [],
  "timetrackers": [],
  "awards": [],
  "registration_completed_at": "2015-05-14T15:07:24.000Z",
  "attachments": [],
  "notification_new_message": true,
  "notification_new_bulletin_post": true,
  "notification_new_favorite": true,
  "notification_award_gained": true,
  "notification_notify_new_friend_user": true,
  "notification_notify_new_bulletin_post": true,
  "notification_notify_request_expiration": true,
  "notification_notify_deal_payment": true,
  "notification_notify_inactivity_user": true,
  "notification_instant_pay": true
}
```


### HTTP Request

`GET: http://timerepublik.com/api/v1/me.json`


<aside class="info">
Inserire nell header di ogni richiesta un access_token valido <br>
Authorization: Bearer YOUR_ACCESS_TOKEN
</aside>

### Parametri opzionali

E' possibile limitare il numero dei campi ritornati nel json di risposta specificando a quali campi si è interessati
in un parametro fields (array o valori separati da virgola).

Serializzare i parametri 

> Limitare i campi ritornati nel JSON 

```shell
curl -H "Authorization: Bearer 53733610d2c1199a81e4f2fe88af4725e67adb3dcfe5fafa12ac2aef70cc41ac" "https://timerepublik.com/api/v1/me.json?fields\[\]=phone&fields\[\]=email"
```

> oppure 

```shell
curl -H "Authorization: Bearer 53733610d2c1199a81e4f2fe88af4725e67adb3dcfe5fafa12ac2aef70cc41ac" "https://timerepublik.com/api/v1/me.json?fields=phone,email"
```

> Risultato 

```json
{
  "email": "azaup.a@gmail.com",
  "phone": null
}
```


## Aggiornare le informazioni del profilo utente

### HTTP Request

`PUT/POST: http://timerepublik.com/api/v1/me.json`

> Esempio di modifica dati utente

```shell
curl --data "user[birthday]=201-01983-01-20&user[gender_privacy]=0&user[email]='test@test.com'" -H "Authorization: Bearer 53733610d2c1199a81e4f2fe88af4725e67adb3dcfe5fafa12ac2aef70cc41ac" https://timerepublik.com/api/v1/me.json
```

> Successo, HTTP status 200

```json
{
  "email": "azaup.a@gmail.com",
  "birthday": "1983-01-20",
  "gender_privacy": 0
}
```

> Errore, HTTP status 422

```json
{
  "errors": {
    "birthday": [
      "Deve avere almeno 16 anni per registrarti"
    ]
  },
  "error_code": 2001,
  "error_message": "Validation Error"
}
```

> Se si preferisce avere l'oggetto completo in risposta

```bash
curl --data "fields=all&user[birthday]=201-01983-01-20&user[gender_privacy]=0&user[email]='test@test.com'" -H "Authorization: Bearer 53733610d2c1199a81e4f2fe88af4725e67adb3dcfe5fafa12ac2aef70cc41ac" https://timerepublik.com/api/v1/me.json
```

> Risposta 

```json
{
  "id": 1010,
  "email": "azaup.a@gmail.com",
  "username": null,
  "first_name": "Andrea",
  "last_name": "Zaupa",
  "avatar": {
    "url": "/uploads/avatars/1010/5ff8fa9594cad9c9b7daa2b280faf3d1_48830_1143961800_5953639_n_bigger.jpg",
    "little": {
      "url": "/uploads/avatars/1010/little_5ff8fa9594cad9c9b7daa2b280faf3d1_48830_1143961800_5953639_n_bigger.jpg"
    },
    "small": {
      "url": "/uploads/avatars/1010/small_5ff8fa9594cad9c9b7daa2b280faf3d1_48830_1143961800_5953639_n_bigger.jpg"
    },
    "medium": {
      "url": "/uploads/avatars/1010/medium_5ff8fa9594cad9c9b7daa2b280faf3d1_48830_1143961800_5953639_n_bigger.jpg"
    },
    "default": {
      "url": "/uploads/avatars/1010/default_5ff8fa9594cad9c9b7daa2b280faf3d1_48830_1143961800_5953639_n_bigger.jpg"
    },
    "big": {
      "url": "/uploads/avatars/1010/big_5ff8fa9594cad9c9b7daa2b280faf3d1_48830_1143961800_5953639_n_bigger.jpg"
    },
    "bigger": {
      "url": "/uploads/avatars/1010/bigger_5ff8fa9594cad9c9b7daa2b280faf3d1_48830_1143961800_5953639_n_bigger.jpg"
    }
  },
  "bio": "wind of change",
  "gender": null,
  "time_available": 6300,
  "time_earned": 6300,
  "time_spent": 0,
  "trustmeter": 14,
  "avg_rating": null,
  "units": "km",
  "time_zone": null,
  "locale": "it",
  "public_profile": true,
  "location": {
    "latitude": null,
    "longitude": null
  },
  "distance": null,
  "tag_ids": [],
  "talent_ids": [],
  "created_at": "2015-05-14T15:16:46.000Z",
  "updated_at": "2015-05-15T13:40:33.687Z",
  "email_privacy": 0,
  "cover": null,
  "gender_privacy": 0,
  "birthday": null,
  "birthday_privacy": 2,
  "phone": null,
  "phone_privacy": 0,
  "address": null,
  "address_privacy": 0,
  "city": null,
  "city_privacy": 2,
  "state": null,
  "state_privacy": 2,
  "country": null,
  "country_privacy": 2,
  "zip": null,
  "zip_privacy": 2,
  "skype": null,
  "facebook": null,
  "twitter": "https://twitter.com/azaupa",
  "linkedin": null,
  "website": "http://blog.azaupa.info",
  "vkontakte": null,
  "odnoklasniki": null,
  "tags_count": 0,
  "requests_count": 0,
  "offers_count": 0,
  "deals_count": 0,
  "awards_count": 0,
  "referer_count": 0,
  "favoritings_count": 0,
  "inverse_favoritings_count": 0,
  "new_awards": 0,
  "delta": true,
  "group": null,
  "latitude": null,
  "longitude": null,
  "tags": [],
  "talents": [],
  "favorites": [],
  "timetrackers": [
    {
      "id": 1
    },
    {
      "id": 2
    },
    {
      "id": 3
    },
    {
      "id": 4
    },
    {
      "id": 5
    }
  ],
  "awards": [],
  "registration_completed_at": null,
  "attachments": [],
  "notification_new_message": true,
  "notification_new_bulletin_post": true,
  "notification_new_favorite": true,
  "notification_award_gained": true,
  "notification_notify_new_friend_user": true,
  "notification_notify_new_bulletin_post": true,
  "notification_notify_request_expiration": true,
  "notification_notify_deal_payment": true,
  "notification_notify_inactivity_user": true,
  "notification_instant_pay": true
}
```

### Parametri accettati

Parameter | Type | Description
--------- | ------- | -----------
user[first_name]|string| Nome utente
user[last_name]|string| Cognome utente
user[gender]|string| Sesso ("M" o "F")
user[gender_privacy]|fixnum| gender_privacy
user[birthday]|date| Data di nascita
user[birthday_privacy]|fixnum|birthday_privacy
user[phone]|string| Telefono
user[phone_privacy]|fixnum|phone_privacy
user[bio]|string| Descrizione profilo
user[avatar]|avatar_uploader| Avatar, multipart base64 file encoding
user[avatar_remote_url]| string| Avatar, salvato da un url remoto
user[cover]|cover_uploader| Cover profilo, multipart base64 file encoding
user[skype]|string| Skype name
user[facebook]|string| url profilo facebook
user[twitter]|string| url profilo twitter
user[linkedin]|string| url profilo linkedin
user[website]|string| url website dell'utente
user[vkontakte]|string| url vkontakte
user[odnoklasniki]|string|url odnoklasniki
user[address]|string| Indirizzo (via)
user[address_privacy]|fixnum| address_privacy
user[city]|string| Coune
user[city_privacy]|fixnum|city_privacy
user[state]|string| Provincia (sigla)
user[state_privacy]|fixnum|state_privacy
user[country]|string| Nazione (sigla)
user[country_privacy]|fixnum|country_privacy
user[zip]|string| zip o cap
user[zip_privacy]|fixnum|zip_privacy
user[address_string]|string| Indirizzo da geolocalizzare (in alternativa a location)
user[location][latitude]| string| latitudine, obbligatoria se longitudine settata 
user[location][longitude]|string| longitudine, obbligatoria se latitudine settata
user[location][full_address]| string|Indirizzo completo in formato standard (verrà geolocalizzato)
user[email]|string| Email utente (neccessita di current_password)
user[current_password]|string| passowrd corrente dell'utente, necessaria se si cambiano email o username
user[password]|string| cambio password
user[password_confirmation]|string| cambio password, password_confirmation
user[username]|string| nome utente, neccessita di current_password
user[locale]|string| Lingua preferita dall'utente (sigla)
user[units]|string| Unità di misura preferita dall'utente (km)
user[time_zone]|string| time_zone Utente (formato standard)
user[public_profile]|boolean| Visibilità pubblica del profilo
user[help_dialog]|boolean| CAmpo di servizio, nasconde la guida a primo accesso
user[deactivated]|boolean| Profilo disabilitato
user[talent_ids]|array| Lista di ID Talenti (o id separati da ,)
user[notification_new_message]|boolean| notification_new_message
user[notification_new_bulletin_post]|boolean| notification_new_bulletin_post
user[notification_new_favorite]|boolean| notification_new_favorite
user[notification_award_gained]|boolean| notification_award_gained
user[notification_notify_new_friend_user]|boolean| notification_notify_new_friend_user
user[notification_notify_new_bulletin_post]|boolean| notification_notify_new_bulletin_post
user[notification_notify_request_expiration]|boolean| notification_notify_request_expiration
user[notification_notify_deal_payment]|boolean| notification_notify_deal_payment
user[notification_notify_inactivity_user]|boolean| notification_notify_inactivity_user
user[notification_instant_pay]|boolean| notification_instant_pay

Verranno aggiornati solamente i campi passati alla POST, non è necessario inviare tutti i campi ad ogni richiesta di update.

<aside class="info">Il valore dei campi privacy_ deve essere (0|1|2), 0 nessuno, 1 solo amici, 2 tutti </aside>
<aside class="info"> I campi avatar e cover si aspettano una POST multipart di un file</aside>
<aside class="info"> Passare date e datetime nel formato standard "2015-05-15" o "2015-05-15T12:40:07.582Z" </aside>
<aside class="info"> Se si cambia il campo email, questa verrà salvata come 'da confermare' e aggiornata solamente all'effetiva conferma (tramite una mail inviata al nuovo indirizzo) </aside>

<aside class="warning"> La registrazione viene considerata completa se è possibile geolocalizzare l'indirizzo del utente, se sono presenti email, nome, cognome e se è stato collegato almento 1 talento. <br> Fintanto che la registrazione non è completa l'accesso alle api è limitato. </aside>


### Risposta

In risposta si otterrà sempre un JSON:

HTTP status 200 , utente salvato con successo, il JSON rappresenta l'utente modificato

HTTP status 422 unprocessable_entity, Errore nel salvataggio, verrà ritornato uno JSON contentente gli errori di validazione

Nel caso di successo, il JSON ritornato conterrà solamente i campi modificati, per visualizzare l'intero JSON modificato aggiungere il parametro fields=all alla chiamata.

### HTTP Request

`GET https://example.com/kittens/<ID>`

### URL Parameters

Parameter | Description
--------- | -----------
ID | The ID of the cat to retrieve

