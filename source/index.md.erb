---
title: API Reference

language_tabs:
  - shell

toc_footers:
  - <a href='#'>Sign Up for a Developer Key</a>
  - <a href='http://github.com/tripit/slate'>Documentation Powered by Slate</a>

includes:
  - errors

search: true
---

# Hello Developers.

Abbiamo rilasciato la prima versione delle Api TimeRepublik per permettere una maggiore integrazione dei servizi offerti da TRK con le vostre APP.

Se avete un idea che possa ampliare l'user experience di Timerepublik non esistate a contatatrci per richiedere una chiave di accesso ai Web Service pubblici di TRK.

# Getting Started

Per accedere alle api avrete bisongo di:

- Richiedere a Timerepublik una coppia di chiavi client_id e client_secret specifici per la vostra applicazione. 
- Utilizzare client_id e opzionalmente client_secret per richiedere un access_token a timerepublik usando il protocollo Oauth 2 https://tools.ietf.org/html/rfc6749
- Esplorare i vari endpoint di TRK passando ad ogni richiesta l'access token ottenuto. 

Il server Oauth Timerepublik è configurato per autenticarsi tramite 

- 4.1.  Authorization Code Grant
- 4.3.  Resource Owner Password Credentials Grant

# Authentication

`http://timerepublik.com/oauth/token`

POST 



> To authorize, use this code:

```shell
curl --data 'client_id=YOUR_CLIENT_ID&grant_type=password&username=USER_EMAIL&password=USER_PASSWORD' http://timerepublik.com/oauth/token
```

> assicurati di impostare `YOUR_CLIENT_ID` `USER_EMAIL` e `USER_PASSWORD` con i parametri corretti.

> In risposta il server ritornerà l'access_token da utilizzare nelle chiamate successive.

```json
{"access_token":"ffeb8b661600ee464eb82592dd143810638da818a5cdb292f2c0e493141ae963","token_type":"bearer","expires_in":604800,"scope":"public","created_at":1431100101}
```
> risposta 401 in caso di errore (client_id non autorizzato o login errato)

```json
{"error":"invalid_grant","error_description":"The provided authorization grant is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client."}
```


<aside class="notice">
You must replace `meowmeowmeow` with your personal API key.
</aside>

# Kittens

## Get All Kittens

```shell
curl "http://example.com/api/kittens"
  -H "Authorization: meowmeowmeow"
```

> The above command returns JSON structured like this:

```json
[
  {
    "id": 1,
    "name": "Fluffums",
    "breed": "calico",
    "fluffiness": 6,
    "cuteness": 7
  },
  {
    "id": 2,
    "name": "Isis",
    "breed": "unknown",
    "fluffiness": 5,
    "cuteness": 10
  }
]
```

This endpoint retrieves all kittens.

### HTTP Request

`GET http://example.com/kittens`

### Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
include_cats | false | If set to true, the result will also include cats.
available | true | If set to false, the result will include kittens that have already been adopted.

<aside class="success">
Remember — a happy kitten is an authenticated kitten!
</aside>

## Get a Specific Kitten

```shell
curl "http://example.com/api/kittens/3"
  -H "Authorization: meowmeowmeow"
```

> The above command returns JSON structured like this:

```json
{
  "id": 2,
  "name": "Isis",
  "breed": "unknown",
  "fluffiness": 5,
  "cuteness": 10
}
```

This endpoint retrieves a specific kitten.

<aside class="warning">If you're not using an administrator API key, note that some kittens will return 403 Forbidden if they are hidden for admins only.</aside>

### HTTP Request

`GET http://example.com/kittens/<ID>`

### URL Parameters

Parameter | Description
--------- | -----------
ID | The ID of the cat to retrieve

