# Oauth Authentication

## Introduzione

Il server Oauth Timerepublik è configurato per autenticarsi tramite 

- Authorization Code Grant (3-legged)
- Resource Owner Password Credentials Grant

Capire il funzionamento di oauth è essenziale per la creazione di applicazioni che utilizzino le API TRK. 

Per autorizzare uno specifico utente ad accedere alle api dovete: 

- Richiedere (se non lo avete già fatto) a Timerepublik una coppia di chiavi client_id e client_secret specifici per la vostra applicazione.
- Richiedere un access_token che vi permetterà di accedere alle api nel ruolo di un utente, utilizzando il protocollo Oauth2.
- Includere l'access_token in tutte le richieste HTTP verso le API; includendo nell'header delle richieste {"Authorization: Bearer YOUR_ACCESS_TOKEN"}


I paragrafi seguenti illustrano il funzionamento base di OAuth.

## Authorization Code Flow
Utile per integrare Timerepublik con un qualsiasi servizio WEB. 
E' probabilmnete il metodo di autorizzazione piu' utilizzato. 

Consiste nello scambio di un codice di autorizzazione per un access_token, per i dettagli si consiglia di consultare l'rfc OAUTH https://tools.ietf.org/html/rfc6749#section-4.1

Come anticipato, il primo passo è quello di richiedere al team di sviluppo di TimeRepublik una coppia di chiavi che rappresentano la vostra app (client_id e client_secret), indicando inoltre l'url di callback per permettere agli utenti della vostra app di continuare l'accesso dopo l'autorizzazione.

### Richiesta di autorizzazione

Per ottenere il token di autorizzazione dovete eseguire un redirect o far seguire un link  dalla vostra applicazione verso l'endpoint 

> Richiesta di autenticazione Oauth

```shell
open https://timerepublik.com/oauth/authorize?client_id=YOUR_CLIENT_ID&redirect_uri=YOUR_REDIRECT_URI&response_type=code
```


GET: `https://timerepublik.com/oauth/authorize?client_id=YOUR_CLIENT_ID&redirect_uri=YOUR_REDIRECT_URI&response_type=code`


sostituendo con i parametri corretti YOUR_CLIENT_ID e YOUR_REDIRECT_URI.

All'utente verrà chiesto di autenticarsi in TimeRepublik inserendo le proprie credenziali. 

Alla fine della procedura di autenticazione Timerepublik redirigerà l'utente nuovamente alla vostra app, all'indirizzo YOUR_REDIRECT_URI che avete passato in parametro.

Tra i parametri della richiesta che Timerepublik farà al vostro servizio troverete il vostro authorization_code. 

Ora non resta che scambiarlo per un access_token.

### Richiedere l'access token

L'authorization_code puo' essere scambiato con un access token tramite una chiamata POST server<->server all'endpoint

> Esempio di richiesta access_token

```shell
curl --data 'client_id=YOUR_CLIENT_ID&client_secret=YOUR_CLIENT_SECRET&grant_type=authorization_code&redirect_uri=YOUR_REDIRECT_URI&code=RETURNED_AUTHORIZATION_CODE' \
'https://timerepublik.com/oauth/token'
```

> Risposta in caso di successo

```json
{
  "access_token":"fa591d5b92be3ba7bc5c2c10be938901aa2c5c932cf9f312e5e2660d235dbe46",
  "token_type":"bearer",
  "expires_in":604800,
  "scope":"public",
  "created_at":1431526714
}
```

> Risposta in caso di fallimento (http status 401)

```json
{
  "error":"invalid_grant",
  "error_description":"The provided authorization grant is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client."
}
```


`https://timerepublik.com/oauth/token`

dovete includere i seguenti parametri :

Parametri | Descrizione
--------- | -----------
client_id | Il vostro CLIENT_ID 
client_secret | Il vostro CLIENT_SECRET
code | l'authorization code ritornato dalla procedura precedente
grant_type | Impostare a 'authorization_code'
redirect_uri | Il parametro YOUR_REDIRECT_URI utilizzato in precedenza

In risposta otterrete qualcosa di simile a 

`json
{
  "access_token": "fa591d5b92be3ba7bc5c2c10be938901aa2c5c932cf9f312e5e2660d235dbe46",
  "token_type": "bearer",
  "expires_in": 604800,
  "scope": "public",
  "created_at": 1431526714
}
`

Risposta | Descrizione
--------- | -----------
access_token | L'access token generato per l'utente che si è autenticato.
expires_in | Il tempo di validità del token in secondi a partire da created_at
created_at | L'effettiva data di creazione del token


## Resource Owner Password Credentials Grant

Quando non è possibile utilizzare "Authorization code flow" è possibile richiedere direttamente un access_token passando le credenziali dell'utente. 

Timerepublik consente anche l'accesso tramite single sign on di facebook e twitter, è prevista una variante del Password Credentials Grant che consente l'accesso utilizzando le credenziali Facebook/Teitter. 

> Resource Owner Password Credentials Grant


```shell
curl --data 'client_secret=YOUR_CLIENT_SECRET&client_id=YOUR_CLIENT_ID&grant_type=password&username=USER_EMAIL&password=USER_PASSWORD' https://timerepublik.com/oauth/token
```

> assicurati di impostare `YOUR_CLIENT_SECRET` `YOUR_CLIENT_ID` `USER_EMAIL` e `USER_PASSWORD` con i parametri corretti.

> In risposta il server ritornerà l'access_token da utilizzare nelle chiamate successive.

```json
{
  "access_token": "ffeb8b661600ee464eb82592dd143810638da818a5cdb292f2c0e493141ae963",
  "token_type": "bearer",
  "expires_in": 604800,
  "scope": "public",
  "created_at": 1431100101
}
```

> risposta 401 in caso di errore (client_id non autorizzato o login errato)

```json
{
  "error": "invalid_grant",
  "error_description": "The provided authorization grant is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client."
}
```


L'endpoint da chiamare per ottenere l'access_token è :

`POST: https://timerepublik.com/oauth/token`

i parametri da utilizzare sono 

Parametri | Descrizione
--------- | -----------
grant_type | impostare a 'password'
username | email dell'utente
password | la password dell'utente
client_id | client_id fornito da timerepublik
client_secret | client_secret fornito da timerepublik


In risposta otterrete un json simile a questo

`json
{
  "access_token": "fa591d5b92be3ba7bc5c2c10be938901aa2c5c932cf9f312e5e2660d235dbe46",
  "token_type": "bearer",
  "expires_in": 604800,
  "scope": "public",
  "created_at": 1431526714
}
`

Risposta | Descrizione
--------- | -----------
access_token | L'access token generato per l'utente che si è autenticato.
expires_in | Il tempo di validità del token in secondi a partire da created_at
created_at | L'effettiva data di creazione del token


### Password credential grant Facebook/Twitter

E' possibile scambiare un access_token ottenuto da Facebook/Twitter per l'app TimeRepublik con un access_token 
TimeRepublik.

> Password Credential grant per facebook

```shell
curl --data 'client_secret=YOUR_CLIENT_SECRET&client_id=YOUR_CLIENT_ID&grant_type=password&username=1123961800&trusted_token=CACoHZC3D1e4BAMJ2QhR8XZBe44glLLTBN7KuZBFH4I2ZB3w60tJWjoLgp3ZAasXNVkQzZABI158GaBcGsTx5cvx1ZA5a0yiwUZCKK78ZAZAj05wSenwgHkrvpbgUZCYs8vNfvpPfgcO64sb7QZBDNIrUJEx5f4q6ec3mvNQa6SsQ4ZAp6s1vlowMgiUM7ZBJUmir1ZAVYZD&provider=facebook' 'https://timerepublik.com/oauth/token'
```

> Password credential grant per Twitter

```shell
curl --data 'client_secret=YOUR_CLIENT_SECRET&client_id=YOUR_CLIENT_ID&grant_type=password&username=35727806&trusted_token=35707806-Ke9GVcSHIXoXGSQhQEgMUMIl7Y2bsGrCawdO2vSd0&trusted_secret=lY4mOe2omuYSDh3kUOa1agpdzpLtCXqJvrpwAKjYEcA4f&provider=twitter' 'https://timerepublik.com/oauth/token'
```

Endpoint: 

`POST: https://timerepublik.com/oauth/token`

i parametri da utilizzare sono 

Parametri | Descrizione
--------- | -----------
grant_type | impostare a 'password'
username | L'object ID Facebook/Twitter corrispondente all'utente
trusted_token | access_token ottenuto da Facebook/twitter
trusted_secret | impostare con l'access_secret (solo per twitter)
provider | impostare a 'facebook' o 'twitter' a seconda della provenienza del token
client_id | client_id fornito da timerepublik
client_secret | client_secret fornito da timerepublik

Timerepublik verificherà la validità del Token di autenticazione e genererà a sua volta un access_token per l'utente 
che deve essersi registrato almento una volta utilizzando il proprio profilo social a TimeRepublik.

 