it:
  auth:
    body: "# Oauth Authentication\n\n## Introduzione\n\nIl server Oauth Timerepublik è configurato per autenticarsi tramite \n\n- Authorization Code Grant (3-legged)\n- Resource Owner Password Credentials Grant\n\nCapire il funzionamento di oauth è essenziale per la creazione di applicazioni che utilizzino le API TRK. \n\nPer autorizzare uno specifico utente ad accedere alle api dovete: \n\n- Richiedere (se non lo avete già fatto) a Timerepublik una coppia di chiavi client_id e client_secret specifici per la vostra applicazione.\n- Richiedere un access_token che vi permetterà di accedere alle api nel ruolo di un utente, utilizzando il protocollo Oauth2.\n- Includere l'access_token in tutte le richieste HTTP verso le API; includendo nell'header delle richieste {\"Authorization: Bearer YOUR_ACCESS_TOKEN\"}\n\nI paragrafi seguenti illustrano il funzionamento base di OAuth.\n\n## Authorization Code Flow\nUtile per integrare Timerepublik con un qualsiasi servizio WEB. \nE' probabilmnete il metodo di autorizzazione piu' utilizzato. \n\nConsiste nello scambio di un codice di autorizzazione per un access_token, per i dettagli si consiglia di consultare l'rfc OAUTH https://tools.ietf.org/html/rfc6749#section-4.1\n\nCome anticipato, il primo passo è quello di richiedere al team di sviluppo di TimeRepublik una coppia di chiavi che rappresentano la vostra app (client_id e client_secret), indicando inoltre l'url di callback per permettere agli utenti della vostra app di continuare l'accesso dopo l'autorizzazione.\n\n### Richiesta di autorizzazione\n\nPer ottenere il token di autorizzazione dovete eseguire un redirect o far seguire un link  dalla vostra applicazione verso l'endpoint \n\n> Richiesta di autenticazione Oauth\n\n```shell\nopen https://timerepublik.com/oauth/authorize?client_id=YOUR_CLIENT_ID&redirect_uri=YOUR_REDIRECT_URI&response_type=code&scope=\"public write\"\n```\n\nGET: `https://timerepublik.com/oauth/authorize?client_id=YOUR_CLIENT_ID&redirect_uri=YOUR_REDIRECT_URI&response_type=code&scope=public write`\n\nsostituendo con i parametri corretti YOUR_CLIENT_ID e YOUR_REDIRECT_URI.\n\nAll'utente verrà chiesto di autenticarsi in TimeRepublik inserendo le proprie credenziali. \n\nAlla fine della procedura di autenticazione Timerepublik redirigerà l'utente nuovamente alla vostra app, all'indirizzo YOUR_REDIRECT_URI che avete passato in parametro.\n\nTra i parametri della richiesta che Timerepublik farà al vostro servizio troverete il vostro authorization_code. \n\nOra non resta che scambiarlo per un access_token.\n\n### Richiedere l'access token\n\nL'authorization_code puo' essere scambiato con un access token tramite una chiamata POST server<->server all'endpoint\n\n> Esempio di richiesta access_token\n\n```shell\ncurl --data 'client_id=YOUR_CLIENT_ID&client_secret=YOUR_CLIENT_SECRET&scope=public write&grant_type=authorization_code&redirect_uri=YOUR_REDIRECT_URI&code=RETURNED_AUTHORIZATION_CODE' \\\n'https://timerepublik.com/oauth/token'\n```\n\n> Risposta in caso di successo\n\n```json\n{\n  \"access_token\": \"0d975644dd0eebd4e3373534af0fcaaa88e3233067ecffb764269e90f03476b6\",\n  \"token_type\": \"bearer\",\n  \"expires_in\": 604800,\n  \"refresh_token\": \"898bfe5e0a6b1060c85e26e05791475777b89100c4ddd40804a3f11a0cd94aa7\",\n  \"scope\": \"public\",\n  \"created_at\": 1437039500\n}\n```\n\n> Risposta in caso di fallimento (http status 401)\n\n```json\n{\n  \"error\":\"invalid_grant\",\n  \"error_description\":\"The provided authorization grant is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client.\"\n}\n```\n`https://timerepublik.com/oauth/token`\n\ndovete includere i seguenti parametri:\n\nParametri | Descrizione\n--------- | -----------\nclient_id | Il vostro CLIENT_ID \nclient_secret | Il vostro CLIENT_SECRET\ncode | l'authorization code ritornato dalla procedura precedente\ngrant_type | Impostare a 'authorization_code'\nredirect_uri | Il parametro YOUR_REDIRECT_URI utilizzato in precedenza\nscope| lo scope public da i permessi in sola lettura, mentre 'public write' consente la lettura e scrittura\n\nIn risposta otterrete qualcosa di simile a \n\n`json\n{\n  \"access_token\": \"0d975644dd0eebd4e3373534af0fcaaa88e3233067ecffb764269e90f03476b6\",\n  \"token_type\": \"bearer\",\n  \"expires_in\": 604800,\n  \"refresh_token\": \"898bfe5e0a6b1060c85e26e05791475777b89100c4ddd40804a3f11a0cd94aa7\",\n  \"scope\": \"public\",\n  \"created_at\": 1437039500\n}\n`\n\nRisposta | Descrizione\n--------- | -----------\naccess_token | L'access token generato per l'utente che si è autenticato.\nexpires_in | Il tempo di validità del token in secondi a partire da created_at\ncreated_at | L'effettiva data di creazione del token\nscope | I permessi associati al token\nrefresh_token | E' necessario per rinnovare un token che sta per scadere \n\n## Resource Owner Password Credentials Grant\n\nQuando non è possibile utilizzare \"Authorization code flow\" è possibile richiedere direttamente un access_token passando le credenziali dell'utente. \n\nTimerepublik consente anche l'accesso tramite single sign on di facebook e twitter, è prevista una variante del Password Credentials Grant che consente l'accesso utilizzando le credenziali Facebook/Teitter. \n\n> Resource Owner Password Credentials Grant\n\n```shell\ncurl --data 'client_secret=YOUR_CLIENT_SECRET&client_id=YOUR_CLIENT_ID&grant_type=password&username=USER_EMAIL&password=USER_PASSWORD&scope=public write' https://timerepublik.com/oauth/token\n```\n\n> assicurati di impostare `YOUR_CLIENT_SECRET` `YOUR_CLIENT_ID` `USER_EMAIL` e `USER_PASSWORD` con i parametri corretti.\n\n> In risposta il server ritornerà l'access_token da utilizzare nelle chiamate successive.\n\n```json\n{\n  \"access_token\": \"0d975644dd0eebd4e3373534af0fcaaa88e3233067ecffb764269e90f03476b6\",\n  \"token_type\": \"bearer\",\n  \"expires_in\": 604800,\n  \"refresh_token\": \"898bfe5e0a6b1060c85e26e05791475777b89100c4ddd40804a3f11a0cd94aa7\",\n  \"scope\": \"public\",\n  \"created_at\": 1437039500\n}\n```\n> risposta 401 in caso di errore (client_id non autorizzato o login errato)\n\n```json\n{\n  \"error\": \"invalid_grant\",\n  \"error_description\": \"The provided authorization grant is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client.\"\n}\n```\n\nL'endpoint da chiamare per ottenere l'access_token è :\n\n`POST: https://timerepublik.com/oauth/token`\n\ni parametri da utilizzare sono \n\nParametri | Descrizione\n--------- | -----------\ngrant_type | impostare a 'password'\nusername | email dell'utente\npassword | la password dell'utente\nclient_id | client_id fornito da timerepublik\nclient_secret | client_secret fornito da timerepublik\nscope | 'public' o 'public write'\n\n\nIn risposta otterrete un json simile a questo\n\n`json\n{\n  \"access_token\": \"0d975644dd0eebd4e3373534af0fcaaa88e3233067ecffb764269e90f03476b6\",\n  \"token_type\": \"bearer\",\n  \"expires_in\": 604800,\n  \"refresh_token\": \"898bfe5e0a6b1060c85e26e05791475777b89100c4ddd40804a3f11a0cd94aa7\",\n  \"scope\": \"public\",\n  \"created_at\": 1437039500\n}\n`\n\nRisposta | Descrizione\n--------- | -----------\naccess_token | L'access token generato per l'utente che si è autenticato.\nexpires_in | Il tempo di validità del token in secondi a partire da created_at\ncreated_at | L'effettiva data di creazione del token\nscope | 'public' o 'public write'\nrefresh_token| deve essere memorizzato e puo' essere utilizzato per rinnovare un access_token in scadenza\n\n### Password credential grant Facebook/Twitter\n\nE' possibile scambiare un access_token ottenuto da Facebook/Twitter per l'app TimeRepublik con un access_token \nTimeRepublik.\n\n> Password Credential grant per facebook\n\n```shell\ncurl --data 'client_secret=YOUR_CLIENT_SECRET&client_id=YOUR_CLIENT_ID&grant_type=password&username=1123961800&trusted_token=CACoHZC3D1e4BAMJ2QhR8XZBe44glLLTBN7KuZBFH4I2ZB3w60tJWjoLgp3ZAasXNVkQzZABI158GaBcGsTx5cvx1ZA5a0yiwUZCKK78ZAZAj05wSenwgHkrvpbgUZCYs8vNfvpPfgcO64sb7QZBDNIrUJEx5f4q6ec3mvNQa6SsQ4ZAp6s1vlowMgiUM7ZBJUmir1ZAVYZD&scope=public write&provider=facebook' 'https://timerepublik.com/oauth/token'\n```\n\n> Password credential grant per Twitter\n\n```shell\ncurl --data 'client_secret=YOUR_CLIENT_SECRET&client_id=YOUR_CLIENT_ID&grant_type=password&username=35727806&trusted_token=35707806-Ke9GVcSHIXoXGSQhQEgMUMIl7Y2bsGrCawdO2vSd0&trusted_secret=lY4mOe2omuYSDh3kUOa1agpdzpLtCXqJvrpwAKjYEcA4f&provider=twitter&scope=public write' 'https://timerepublik.com/oauth/token'\n```\n\nEndpoint: \n\n`POST: https://timerepublik.com/oauth/token`\n\ni parametri da utilizzare sono \n\nParametri | Descrizione\n--------- | -----------\ngrant_type | impostare a 'password'\nusername | L'object ID Facebook/Twitter corrispondente all'utente\ntrusted_token | access_token ottenuto da Facebook/twitter\ntrusted_secret | impostare con l'access_secret (solo per twitter)\nprovider | impostare a 'facebook' o 'twitter' a seconda della provenienza del token\nclient_id | client_id fornito da timerepublik\nclient_secret | client_secret fornito da timerepublik\nscope | 'public' o 'public write' rispettivamente per lettura o lettura/scrittura\n\nTimerepublik verificherà la validità del Token di autenticazione e genererà a sua volta un access_token per l'utente \nche deve essersi registrato almento una volta utilizzando il proprio profilo social a TimeRepublik.\n\n\n## Informazioni Token di accesso\n\n> Esempio di richiesta informazioni di un access_token\n\n```shell```\ncurl https://timerepublik.com/oauth/token/info -H \"Authorization: Bearer ca25557ffa5daf9bb65c7b410217197e12b89a9d5dcf2f8d06089181610730e1\"\n```\n\n```json```\n{\n  \"resource_owner_id\": 1010,\n  \"scopes\": [\n    \"public\",\n    \"write\"\n  ],\n  \"expires_in_seconds\": 604488,\n  \"application\": {\n    \"uid\": \"a23c77eeac03c36b52d3c0351ea1851b6271d7d74c628220a43a2a50598abdc3\"\n  },\n  \"created_at\": 1437038842\n}\n```\n\nEndpoint che permette di ottenere informazioni legate ad un access_token valido.\n\n`GET: https://timerepublik.com/oauth/token/info`\n\nNon sono previsti parametri opzionali\n\nUn access_token valido và incluso nell'header della richeista.\n\n## Rinnovare un Token di accesso\n\n> Esempio di rinnovo di un access_token\n\n```shell```\ncurl -F grant_type=refresh_token \\\n-F client_id=a23c77eeac03c36b52d3c0351ea1851b6271d7d74c628220a43a2a50598abdc3 \\\n-F client_secret=bef3fc629c15f3aa4a8102d839d1a73de70dec442251d0be6c9e8205814cd32b \\\n-F refresh_token=898bfe5e0a6b1060c85e26e05791475777b89100c4ddd40804a3f11a0cd94aa7 \\\n-X POST https://timerepublik.com/oauth/token\n```\n\n```json```\n{\n  \"access_token\": \"97a6afcc46db4ae8ddd1ed52b94a2f3f303096253a0834740b2593d3c084171f\",\n  \"token_type\": \"bearer\",\n  \"expires_in\": 604800,\n  \"refresh_token\": \"c505116f944db87b7a52868d234e357582af93ba6ac1714aafc1217a9f303897\",\n  \"scope\": \"public\",\n  \"created_at\": 1437039891\n}\n```\n\nEndpoint che permette di rinnovare un access_token utilizzando il refresh_token fornito dal server.\n\n`POST: https://timerepublik.com/oauth/token`\n\ni parametri da utilizzare sono \n\nParametri | Descrizione\n--------- | -----------\ngrant_type | impostare a 'refresh_token'\nrefresh_token | Il refresh_token ottenuto in precedenza\nclient_id | client_id fornito da timerepublik\nclient_secret | client_secret fornito da timerepublik\nscope | 'public' o 'public write'\n\nIl Token precedente è comunque valido fino alla scadenza impostata.\n\nIl refresh_token puo' essere utilizzato soltanto una volta.\n\n## Revocare un Token di accesso \n\n> Esempio di revoca di un access_token\n\n```shell```\ncurl -F token=97a6afcc46db4ae8ddd1ed52b94a2f3f303096253a0834740b2593d3c084171f \\\n -H \"Authorization: Bearer 97a6afcc46db4ae8ddd1ed52b94a2f3f303096253a0834740b2593d3c084171f\" \\\n -X POST https://timerepublik.com/oauth/revoke\n```\n\n```json```\n{\n}\n```\n\nEndpoint che permette di revocare un access_token:\n\n`POST: https://timerepublik.com/oauth/revoke`\n\ni parametri da utilizzare sono \n\nParametri | Descrizione\n--------- | -----------\ntoken | il token da revocare\n\nAnche il refresh_token rilasciato assieme al token di accesso viene revocato.\n"
  index:
    body: "Abbiamo rilasciato la prima versione delle Api Timerepublik per permettere l'integrazione dei servizi offerti da TRK con le vostre applicazioni sia web che mobile.\n\nLa API REST descritta permette un accesso in lettura e scrittura a tutte le funzionalità della piattaforma Timerepublik.\n\nL'autenticazione è implementata tramite protocollo Oauth2; Il formato delle risposte è JSON.  "
    title: TimeRepublik Rest API's
